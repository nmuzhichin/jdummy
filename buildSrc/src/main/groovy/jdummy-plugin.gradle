plugins {
    // Apply the java Plugin to add support for Java.
    id 'java'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id 'idea'
    id 'jacoco'
    id 'signing'
    id 'maven-publish'
}

sourceCompatibility = 11
targetCompatibility = 11

group = 'com.github.nmuzhichin'
version = project.findProperty("app.version") ?: '1.1.0'
description = 'Jdummy is the simplest library for creating test objects'

dependencies {
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiterVersion"
    testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.0'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

ext {
    userSonatype = project.findProperty("sonatype.username")
    passSonatype = project.findProperty("sonatype.password")
}

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}

java {
    withJavadocJar()
    withSourcesJar()
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = rootProject.name
                description = rootProject.description
                url = 'https://github.com/nmuzhichin/jdummy'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'nmuzhichin'
                        name = 'Nikita Muzhichin'
                        email = 'nmuzhichin@yahoo.com'
                    }
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/nmuzhichin/jdummy/issues'
                }
                scm {
                    connection = 'scm:git@github.com:nmuzhichin/jdummy.git'
                    developerConnection = 'scm:git@github.com:nmuzhichin/jdummy.git'
                    url = 'https://github.com/nmuzhichin/jdummy'
                }
            }
        }
    }
    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username userSonatype
                password passSonatype
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    options.addBooleanOption('html5', true)
}